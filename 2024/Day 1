diff = 0

def diff_calculate(columnA, columnB):
    x = 0
    running_total = 0
    #Assuming a & b have the same length
    length = len(columnA)
    while x <= length - 1:
        subtraction = columnA[x] - columnB[x] 
        if subtraction < 0:
            subtraction = subtraction * -1
        x+=1
        running_total += subtraction
    print("The total is:",running_total)

def read_and_sort():
    columnA, columnB = [], []
    f = open('numbers.txt', 'r' )
    for line in f.readlines():
        fields = line.split('   ')
        columnA.append(int(fields[0]))
        columnB.append(int(fields[1]))
    columnA.sort()
    columnB.sort()
    return columnA, columnB

def similarity_score(columnA, columnB):

    x=0
    y=0
    dict = {}

    length = len(columnA)
    while x <= length - 1:            
        while y <= length - 1:
            #print("X, Y:", x, y)
            if columnA[x] == columnB[y]:
                print("Number is the same")
                print(columnA[x], columnB[y])
                if columnA[x] in dict:
                    print("Key exists", x)
                    dict[columnA[x]]+=1
                else:
                    dict[columnA[x]] = 1
            y+=1
        y=0
        x+=1
    running_total = 0
    for key, value in dict.items():
        print (key, value)
        running_total = running_total + (key*value)
        print(running_total)
    return running_total

columnA, columnB = read_and_sort()

left = [3,4,2,1,3,3]
right = [4,3,5,3,9,3]

print(similarity_score(columnA, columnB))


diff_calculate(columnA, columnB)
